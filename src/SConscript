Import('root_env SOURCE_FILES')

SOURCE_FILES.append(File('SConscript'))

env = root_env.Clone()

env.Append(CPPPATH = ["#/include", "$libhwm_CPPPATH"],
           LIBPATH = [".", "$libhwm_LIBPATH"])

libpush_files = map(File, \
    [
     "callback.c",
     "compose.c",
     "eof.c",
     #"fold.c",
     #"hwm-string.c",
     #"max-bytes.c",
     "min-bytes.c",
     "noop.c",
     #"pairs/both.c",
     #"pairs/first.c",
     #"pairs/par.c",
     #"pairs/second.c",
     "parser.c",
     #"skip.c",
     #"trash.c",
     #"protobuf/assign-uint32.c",
     #"protobuf/assign-uint64.c",
     #"protobuf/field-map.c",
     #"protobuf/hwm-string.c",
     #"protobuf/message.c",
     #"protobuf/skip-length-prefixed.c",
     #"protobuf/submessage.c",
     #"protobuf/varint32.c",
     #"protobuf/varint64.c",
     #"protobuf/varint-prefixed.c",
    ])

SOURCE_FILES.extend(libpush_files)

# Add the source file that isn't compiled on its own, so that the
# sdist contains it.

SOURCE_FILES.append(File("protobuf/assign-template.c"))

libpush = env.SharedLibrary("push", libpush_files,
                            LIBS=["$libhwm_LIB"])
env.Alias("install", env.Install("$LIBDIR", libpush))
Default(libpush)

Export('libpush')
